name: CI & Docker Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ----------------------------------------
      # Backend – basic lint (flake8) + docker build
      # ----------------------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install flake8
        run: pip install flake8

      - name: Lint backend services
        run: |
          flake8 gateway/*.py orders/*.py users/*.py || true

      # ----------------------------------------
      # Front-end – type check & test build
      # ----------------------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package.json

      - name: Install frontend deps
        run: |
          cd frontend && npm ci

      - name: Build front-end (vite)
        run: |
          cd frontend && npm run build

  docker-publish:
    needs: build-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push images
        uses: docker/bake-action@v4
        with:
          # Compose file already describes the builds
          files: docker-compose.yml
          push: true
          set: |
            *.tags=ghcr.io/${{ github.repository }}/$HACK_IMAGE_NAME:sha-${{ github.sha }}
            *.platform=linux/amd64 